name: Build OpenCV Windows

on:
  workflow_dispatch:   # 手动触发


jobs:
  build-opencv:
    runs-on: windows-2022

    steps:
      # 1. 拉取你自己的仓库（假设你的代码）
      - name: Checkout your repo
        uses: actions/checkout@v4
        with:
          path: myrepo   # 你的源码目录（如果你不需要自己仓库代码，可以删掉）

      # 2. 拉取 opencv 主仓库
      - name: Checkout OpenCV
        uses: actions/checkout@v4
        with:
          repository: opencv/opencv
          path: opencv
          fetch-depth: 1

      # 3. 拉取 opencv_contrib 仓库（extra modules）
      - name: Checkout OpenCV contrib
        uses: actions/checkout@v4
        with:
          repository: opencv/opencv_contrib
          path: opencv_contrib
          fetch-depth: 1

      # 4. 设置 VS 环境变量
      - name: Setup Visual Studio environment
        shell: pwsh
        run: |
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" amd64

      # 5. 运行 CMake 配置
      - name: Configure OpenCV with CMake
        shell: pwsh
        run: |
          cmake -S "$PWD\opencv" -B "$PWD\build" `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INSTALL_PREFIX="$PWD\build\install" `
            -DBUILD_SHARED_LIBS=OFF `
            -DBUILD_TESTS=OFF `
            -DBUILD_PERF_TESTS=OFF `
            -DOPENCV_EXTRA_MODULES_PATH="$PWD\opencv_contrib\modules" `
            -G "Visual Studio 17 2022" `
            -A x64 `
            -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded

      # 6. 编译并安装
      - name: Build and install OpenCV
        shell: pwsh
        run: |
          cmake --build "$PWD\build" --config Release --target INSTALL

      # 7. （可选）打包产物上传为 artifact
      - name: Upload OpenCV build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opencv-windows
          path: build/install