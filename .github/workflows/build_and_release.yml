name: Build and Release OpenCV

on:
    push:
      branches: [ "main", "master" ]
    workflow_dispatch: # 允许手动触发

jobs:
  build:
    permissions:
      contents: write
    name: Build OpenCV ${{ matrix.opencv_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - opencv_version: '4.8.0'
            os: windows-latest
          - opencv_version: '4.5.5'
            os: windows-latest
          - opencv_version: '3.4.20'
            os: windows-2019

    steps:
    - name: Checkout OpenCV
      uses: actions/checkout@v4
      with:
        repository: opencv/opencv
        ref: ${{ matrix.opencv_version }}
        path: opencv

    - name: Checkout OpenCV Contrib
      uses: actions/checkout@v4
      with:
        repository: opencv/opencv_contrib
        ref: ${{ matrix.opencv_version }}
        path: opencv_contrib

    - name: Create Build Directory
      run: mkdir build
      shell: bash

    - name: Configure CMake
      shell: bash
      working-directory: ./build
      run: |
        cmake ../opencv \
          -D CMAKE_BUILD_TYPE=Release \
          -D OPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules \
          -D BUILD_EXAMPLES=OFF \
          -D BUILD_TESTS=OFF \
          -D BUILD_PERF_TESTS=OFF \
          -D BUILD_DOCS=OFF \
          -D WITH_CUDA=OFF

    - name: Build OpenCV
      shell: bash
      working-directory: ./build
      run: cmake --build . --config Release

    - name: Install OpenCV
      shell: bash
      working-directory: ./build
      run: cmake --install . --config Release --prefix ../install

    - name: Package Artifact
      shell: bash
      id: package
      run: |
        ARCHIVE_NAME="opencv-${{ matrix.opencv_version }}-win64"
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          ARCHIVE_NAME="${ARCHIVE_NAME}-vc17.zip"
        else
          ARCHIVE_NAME="${ARCHIVE_NAME}-vc16.zip"
        fi
        cd install
        7z a ../${ARCHIVE_NAME} .
        echo "archive_name=${ARCHIVE_NAME}" >> $GITHUB_OUTPUT

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: opencv-build-${{ matrix.opencv_version }}
        path: ${{ steps.package.outputs.archive_name }}
        retention-days: 1

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/*.zip
          tag_name: build-${{ github.run_number }}
          name: OpenCV Builds (Run ${{ github.run_number }})
          body: |
            Compiled OpenCV builds for multiple versions. See attached assets.
            - OpenCV 4.8.0 (windows-latest, VS2022)
            - OpenCV 4.5.5 (windows-latest, VS2022)
            - OpenCV 3.4.20 (windows-2019, VS2019) 